<?php
/**
 * Created by PhpStorm.
 * User: Husayn Hasanov
 * Date: 5/12/19
 * Time: 4:28 PM
 */

namespace common\models;

use common\helpers\Utilities;
use common\models\constants\GeneralStatus;
use Yii;
use yii\behaviors\TimestampBehavior;
use yii\db\ActiveQuery;
use yii\db\ActiveRecord;
use yii\db\Exception;

/**
 * @property string $name
 * @property integer $status
 * @property integer $difference
 * @property integer $company_id
 * @property integer $market_id
 *
 * @property string $statusName
 * @property bool $allowed
 * @property bool $limitedAccess
 * @property bool $is_the_company
 * @property bool $is_the_market
 * @property bool $isOnlineMarket
 * @property Company $company
 * @property Market $market
 * @property-read string $tableName
 */
class   BaseTimestampedModel extends ActiveRecord
{
    /**
     * @return array
     */
    public function behaviors()
    {
        return [TimestampBehavior::className()];
    }

    /**
     * @return array
     */
    public function behaviors2()
    {
        return [
            'timestamp' => [
                'class' => TimestampBehavior::className(),
                'attributes' => [
                    ActiveRecord::EVENT_BEFORE_INSERT => ['created_at', 'updated_at'],
                    ActiveRecord::EVENT_BEFORE_UPDATE => 'updated_at',
                ],
                'value' => function () {
                    return date('U'); // unix timestamp
                },
            ],
        ];
    }

    /**
     * @return ActiveQuery
     */
    public static function findActive()
    {
        return parent::find()->where(['<>', 'status', GeneralStatus::STATUS_DELETED]);
    }

    /**
     * @return bool
     * @throws Exception
     */
    public function beforeDelete(): bool
    {
        if (isset($this->status)) {
            $this->status = GeneralStatus::STATUS_DELETED;
            $this->save();
            return true;
        }
        return true;
//        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }

    /**
     * @return string
     */
    public function getStatusName()
    {
        return GeneralStatus::getString($this->status);
    }

    /**
     * @return ActiveQuery
     */
    public function getCompany()
    {
        return $this->hasOne(Company::className(), ['id' => 'company_id']);
    }

    /**
     * @return ActiveQuery
     */
    public function getMarket(): ActiveQuery
    {
        return $this->hasOne(Market::className(), ['id' => 'market_id']);
    }

    /**
     * @return bool
     */
    public function getAllowed()
    {
        return Yii::$app->user->identity->is_creator || Yii::$app->user->identity->is_admin && Yii::$app->user->identity->company_id == $this->company_id;
    }

    public function getLimitedAccess()
    {
        return $this->allowed || isset($this->market_id) && in_array($this->market_id, Yii::$app->user->identity->market_id_array);
    }

    public function canDelete()
    {
        return $this->allowed || $this->created_at > time() - 86400;
    }

    public function getIs_the_company(): bool
    {
        return Yii::$app->user->identity->company_id == $this->company_id || Yii::$app->user->identity->is_creator;
    }


    public function getIs_the_market(): bool
    {
        return Yii::$app->user->identity->market_id == $this->market_id;
    }

    public function setBasics()
    {
        $this->company_id = Yii::$app->user->identity->company_id;
    }

    /**
     * @return string
     */
    public function getPrint_Format($amount)
    {
        return Utilities::print_format($amount);
    }

    public function getIsOnlineMarket()
    {
        return $this->market_id == 1;
    }

}