<?php

namespace common\models;

use common\models\constants\GeneralStatus;
use common\models\constants\UserRole;
use common\models\constants\UserStatus;
use Yii;
use yii\db\ActiveQuery;

/**
 * This is the model class for table "branch".
 *
 * @property int $id
 * @property int $company_id
 * @property string $name
 * @property string|null $address
 * @property int $status
 * @property int|null $created_at
 * @property int|null $updated_at
 *
 * @property User[] $users
 * @property Company $company
 * @property TelegramChat $telegram_chat
 */
class Market extends BaseTimestampedModel
{
    public const MAIN = 1;

    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'market';
    }

    /**
     * {@inheritdoc}
     */
    public function getTableName(): string
    {
        return self::tableName();
    }

    /**
     * @return ActiveQuery
     */
    public static function findActive(): ActiveQuery
    {
        $user = Yii::$app->user->identity;
        if ($user->role < UserRole::ROLE_ADMIN)
            return parent::findActive()->andWhere(['id' => $user->market_id]); // TODO: Change the autogenerated stub
        return parent::findActive(); // TODO: Change the autogenerated stub
    }

    /**
     * @param bool $insert
     * @param array $changedAttributes
     */
    public function afterSave($insert, $changedAttributes)
    {
        if ($this->status == GeneralStatus::STATUS_INACTIVE)
            User::updateAll(['status' => UserStatus::STATUS_INACTIVE], ['market_id' => $this->id]);
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {

        return [
            [['company_id', 'name'], 'required'],
            [['company_id', 'status', 'created_at', 'updated_at'], 'default', 'value' => null],
            [['company_id', 'status', 'created_at', 'updated_at'], 'integer'],
            [['name', 'address'], 'string', 'max' => 255],
        ];

    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'company_id' => Yii::t('app', 'Company'),
            'name' => Yii::t('app', 'Name'),
            'address' => Yii::t('app', 'Address'),
            'status' => Yii::t('app', 'Status'),
            'created_at' => Yii::t('app', 'Created At'),
            'updated_at' => Yii::t('app', 'Updated At'),
        ];
    }

    /**
     * @return ActiveQuery
     */
    public function getUsers(): ActiveQuery
    {
        return $this->hasMany(User::className(), ['market_id' => 'id']);
    }

    /**
     * @return ActiveQuery
     */
    public function getTelegram_chat(): ActiveQuery
    {
        return $this->hasOne(TelegramChat::className(), ['market_id' => 'id']);
    }
}
